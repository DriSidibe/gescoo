# Generated by Django 3.2.18 on 2024-07-23 20:40

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AnneeScolaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee_scolaire', models.CharField(max_length=9)),
                ('decoupage', models.CharField(choices=[('Trimestre', 'Trimestre'), ('Semestre', 'Semestre')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Evenement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateTimeField()),
                ('date_fin', models.DateTimeField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Niveau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Serie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TypeEnseignement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TypePaiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UserStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Depense',
            fields=[
                ('evenement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gescoo_app.evenement')),
                ('montant', models.IntegerField()),
                ('raison', models.TextField()),
            ],
            bases=('gescoo_app.evenement',),
        ),
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='eleve_user', serialize=False, to='gescoo_app.user')),
                ('status', models.CharField(choices=[('Affecté(e)', 'Affecté(e)'), ('Non affecté(e)', 'Non affecté(e)')], max_length=50)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('gescoo_app.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='enseignant_user', serialize=False, to='gescoo_app.user')),
                ('grade', models.CharField(choices=[('Primaire', 'Primaire'), ('College', 'College'), ('Lycee', 'Lycee')], max_length=50)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('gescoo_app.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Inscription',
            fields=[
                ('evenement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gescoo_app.evenement')),
                ('handicape', models.BooleanField(default=False)),
                ('detail_handicape', models.CharField(blank=True, max_length=50, null=True)),
                ('eps', models.BooleanField(default=True)),
                ('rabais_frais_inscription', models.IntegerField()),
                ('rabais_frais_scolarite', models.IntegerField()),
                ('rabais_frais_annexe', models.IntegerField()),
            ],
            bases=('gescoo_app.evenement',),
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='parent_user', serialize=False, to='gescoo_app.user')),
                ('role', models.CharField(choices=[('Pere', 'Pere'), ('Mere', 'Mere'), ('Tuteur', 'Tuteur')], max_length=50)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('gescoo_app.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PAT',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='pat_user', serialize=False, to='gescoo_app.user')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('gescoo_app.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objet', models.CharField(max_length=50)),
                ('contenu', models.TextField()),
                ('date', models.DateTimeField()),
                ('destinataire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destinataire', to=settings.AUTH_USER_MODEL)),
                ('expediteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expediteur', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('niveau', models.ManyToManyField(to='gescoo_app.Niveau')),
                ('serie', models.ManyToManyField(to='gescoo_app.Serie')),
            ],
        ),
        migrations.CreateModel(
            name='Lv2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gescoo_app.matiere')),
            ],
        ),
        migrations.CreateModel(
            name='FraisScolarite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montaint', models.IntegerField()),
                ('niveau', models.ManyToManyField(to='gescoo_app.Niveau')),
                ('serie', models.ManyToManyField(to='gescoo_app.Serie')),
            ],
        ),
        migrations.CreateModel(
            name='FraisInscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montaint', models.IntegerField()),
                ('niveau', models.ManyToManyField(to='gescoo_app.Niveau')),
                ('serie', models.ManyToManyField(to='gescoo_app.Serie')),
            ],
        ),
        migrations.CreateModel(
            name='FraisAnnexe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montaint', models.IntegerField()),
                ('niveau', models.ManyToManyField(to='gescoo_app.Niveau')),
                ('serie', models.ManyToManyField(to='gescoo_app.Serie')),
            ],
        ),
        migrations.CreateModel(
            name='Ecole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=50)),
                ('budget', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='budget_ecole', to='gescoo_app.budget')),
                ('niveaux', models.ManyToManyField(to='gescoo_app.Niveau')),
                ('series', models.ManyToManyField(to='gescoo_app.Serie')),
                ('type_enseignement', models.ManyToManyField(to='gescoo_app.TypeEnseignement')),
            ],
        ),
        migrations.CreateModel(
            name='coefficientMatiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coefficient', models.FloatField()),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gescoo_app.matiere')),
                ('niveau', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gescoo_app.niveau')),
                ('serie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gescoo_app.serie')),
            ],
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField()),
                ('niveau', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gescoo_app.niveau')),
                ('serie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gescoo_app.serie')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gescoo_app.typeenseignement')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='profil',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gescoo_app.userstatus'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Versement',
            fields=[
                ('evenement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gescoo_app.evenement')),
                ('montant_restant', models.IntegerField()),
                ('inscription_versement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscription_versement', to='gescoo_app.inscription')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_versement', to='gescoo_app.typepaiement')),
            ],
            bases=('gescoo_app.evenement',),
        ),
        migrations.CreateModel(
            name='SuivieEleve',
            fields=[
                ('evenement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gescoo_app.evenement')),
                ('detail', models.FloatField()),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gescoo_app.eleve')),
            ],
            bases=('gescoo_app.evenement',),
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('evenement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gescoo_app.evenement')),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gescoo_app.enseignant')),
                ('pat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gescoo_app.pat')),
            ],
            bases=('gescoo_app.evenement',),
        ),
        migrations.AddField(
            model_name='inscription',
            name='classe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classe_inscription', to='gescoo_app.classe'),
        ),
        migrations.AddField(
            model_name='inscription',
            name='eleve',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gescoo_app.eleve'),
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('evenement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gescoo_app.evenement')),
                ('note', models.IntegerField()),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eleve_evaluation', to='gescoo_app.eleve')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matiere_evaluation', to='gescoo_app.matiere')),
            ],
            bases=('gescoo_app.evenement',),
        ),
        migrations.AddField(
            model_name='enseignant',
            name='classe',
            field=models.ManyToManyField(to='gescoo_app.Classe'),
        ),
        migrations.AddField(
            model_name='enseignant',
            name='matiere',
            field=models.ManyToManyField(to='gescoo_app.Matiere'),
        ),
        migrations.AddField(
            model_name='eleve',
            name='lv2',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='gescoo_app.lv2'),
        ),
        migrations.AddField(
            model_name='eleve',
            name='parent',
            field=models.ManyToManyField(to='gescoo_app.Parent'),
        ),
        migrations.CreateModel(
            name='DossierScolaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eleve_dossier_scolaire', to='gescoo_app.eleve')),
            ],
        ),
        migrations.CreateModel(
            name='Cour',
            fields=[
                ('evenement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gescoo_app.evenement')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classe_cour', to='gescoo_app.classe')),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enseignant_cour', to='gescoo_app.enseignant')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matiere_cour', to='gescoo_app.matiere')),
            ],
            bases=('gescoo_app.evenement',),
        ),
        migrations.CreateModel(
            name='Contrat',
            fields=[
                ('evenement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gescoo_app.evenement')),
                ('type_contrat', models.CharField(choices=[('CDD', 'CDD'), ('CDI', 'CDI'), ('Vacataire', 'Vacataire'), ('Stagiaire', 'Stagiaire'), ('Contractuel', 'Contractuel'), ('Autre', 'Autre')], max_length=50)),
                ('salaire', models.IntegerField()),
                ('enseignant', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='gescoo_app.enseignant')),
                ('pat', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='gescoo_app.pat')),
            ],
            bases=('gescoo_app.evenement',),
        ),
        migrations.CreateModel(
            name='Bulletin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_decoupage', models.IntegerField()),
                ('annee_scolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bulletin_annee_scolaire', to='gescoo_app.anneescolaire')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eleve', to='gescoo_app.eleve')),
            ],
        ),
    ]
